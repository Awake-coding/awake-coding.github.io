
document.addEventListener('DOMContentLoaded', function Main() {
  'use strict';

  //: Object with arrays Alphabets :
  const ObjectAlphabet = {
    enArr: [ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' ],
    uaArr: [ '–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Ñ', '–ñ', '–ó', '–ò', '–Ü', '–á', '–ô', '–ö', '–õ', '–ú', '–ù', '–û', '–ü', '–†', '–°', '–¢', '–£', '–§', '–•', '–¶', '–ß', '–®', '–©', '–¨', '–Æ', '–Ø' ],
    ruArr: [ '–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Å', '–ñ', '–ó', '–ò', '–ô', '–ö', '–õ', '–ú', '–ù', '–û', '–ü', '–†', '–°', '–¢', '–£', '–§', '–•', '–¶', '–ß', '–®', '–©', '–™', '–´', '–¨', '–≠', '–Æ', '–Ø' ],
    ruToEnArr: [ 'A', 'B', 'V', 'G', 'D', 'E', 'Yo/E', 'Zh', 'Z', 'I', 'Y/I', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F', 'Kh', 'Ts', 'Ch', 'Sh', 'Shch', '\'\'', 'Y', '\'', 'E', 'Yu/Iu', 'Ya/Ia' ]
  };

  //: Variables global :
  let maxLength__Array  = 0;        // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω–Ω—ã –º–∞—Å—Å–∏–≤–∞
  let idTable           = 'table';  // id –¥–ª—è create <table>

  /*
  ? –ü–æ–¥—Å—á–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω–Ω—ã –Ω–∞–¥–æ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å,
  ? –∫–æ–≥–¥–∞ –≤ –º–∞—Å—Å–∏–≤–µ –±—É–¥–µ—Ç –∞–ª—Ñ–∞–≤–∏—Ç –¥–ª–∏–Ω–Ω–µ–µ —á–µ–º —Ç–µ —á—Ç–æ –≤—ã–≤–µ–¥–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ,
  ? —Ç–æ –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—É—Å—Ç—ã—Ö —è—á–µ–µ–∫ –¥–ª—è –≤—ã–≤–µ–¥–µ–Ω–Ω—ã—Ö —É–∂–µ –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤ */
  /* –°–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –±—É–∫–≤ */
  for (let key in ObjectAlphabet) { // –í key –≤–µ—Å—å –º–∞—Å—Å–∏–≤ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
    if (maxLength__Array < ObjectAlphabet[key].length) {
      maxLength__Array = ObjectAlphabet[key].length;
    }
  }


  /* –í .html —Å–æ–∑–¥–∞–Ω –±–ª–æ–∫ —Å id='table__wrap' ? */
  if (document.getElementById('table__wrap') !== null) {
    /* üõ† create <table> (–µ—Å–ª–∏ —Å–æ–∑–¥–∞–Ω) */
    let table           = document.createElement('table');
        table.id        = idTable;
    document.getElementById('table__wrap').append(table);
  } else {
    /* ERROR 1 (–µ—Å–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω) */ const massage = `
        <center>Error (‚Ññ1)</center><br/>
        –í .html —Ñ–∞–π–ª–µ –ù–ï —Å–æ–∑–¥–∞–Ω –±–ª–æ–∫ —Å id='table__wrap' –∏–ª–∏ –Ω–∞–ø–∏—Å–∞–Ω —Å –æ—à–∏–±–∫–æ–π
    `;
    return errorMessageOutput(massage);
  }




  //*___ main actions ___*/
  /* creating columns with the given parameters */
  /*         Class        Name        Alphabet  */
  createCol('colNumber',  '‚Ññ',        null);
  createCol('colEn',      'En',       ObjectAlphabet.enArr);
  createCol('colUa',      'Ua',       ObjectAlphabet.uaArr);
  createCol('colRu',      'Ru',       ObjectAlphabet.ruArr);
  createCol('colRuToEn',  'Ru > En',  ObjectAlphabet.ruToEnArr);









  //: ___ Functions ___üëá*/

  //*: createCol :*/
  /*
    üëá Parameters - createCol()
    ** idCol            - ('' - string, —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ id - –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ –Ω–æ–≤–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞)
    ** nameCol__th      - (text - –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ –ê–ª—Ñ–∞–≤–∏—Ç–∞)
    ** arrayLetters     - (–ú–∞—Å—Å–∏–≤ –±—É–∫–≤ –∏–ª–∏ null, –µ—Å–ª–∏ –≤–º–µ—Å—Ç–æ –º–∞—Å—Å–∏–≤–∞ –∑–∞–¥–∞—Ç—å null, —Ç–æ —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫)
  */
  function createCol(idCol='', nameCol__th='', arrayLetters=[])
  {
    /* –ú–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π? */
    if (arrayLetters !== null && arrayLetters.length === 0) {
      /* ERROR 2 */ const massage = `
          <center>Error (‚Ññ2)</center><br/>
          –í —Ñ—É–Ω–∫—Ü–∏—é createCol() –≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è —Å—Ç–æ–ª–±–∏–∫–∞ "${nameCol__th}". <br/><br/>
          ‚Äî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –º–∞—Å—Å–∏–≤–∞ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –≤ –æ–±—ä–µ–∫—Ç–µ ObjectAlphabet <br/><br/>
          –∏–ª–∏ <br/><br/>
          ‚Äî –î–æ–±–∞–≤—å—Ç–µ –±—É–∫–≤—ã –∞–ª—Ñ–∞–≤–∏—Ç–∞ –∫ –º–∞—Å—Å–∏–≤—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
      `;
      errorMessageOutput(massage);
    }

    if (idCol.constructor         === String &&
        nameCol__th.constructor   === String &&
        arrayLetters              === null
        ||
        idCol.constructor         === String &&
        nameCol__th.constructor   === String &&
        arrayLetters.constructor  === Array)
    {
      /* üõ† create column (–°—Ç–æ–ª–±–µ—Ü div) üëà */
      let col__div            = document.createElement('div');
          col__div.className  = 'col';
          col__div.id         = idCol;
      document.getElementById(idTable).append(col__div);

      /* üõ† create name column (–ò–º—è —Å—Ç–æ–ª–±—Ü–∞) üëà */
      let colName__th           = document.createElement('tr');
          colName__th.className = 'nameCol';
          colName__th.innerHTML = '<th class="name" colspan=2>' + nameCol__th + '</th>';
      document.getElementById(idCol).append(colName__th);

      if (arrayLetters === null) {
        /* üõ† create cell number (–Ø—á–µ–π–∫–∞ number) üëà */
        for (let i = 0; i < maxLength__Array; i++) {
          let cell__td            = document.createElement('tr');
              cell__td.className  = 'number';
              cell__td.innerHTML  = '<td>' + (i + 1) + '</td>'; // –ù–∞—á–∞–ª–æ —Å 1
          document.getElementById(idCol).append(cell__td);
        }
      } else {
        /* üõ† create cell letters (–Ø—á–µ–π–∫–∞ letters)üëà */
        for (let i = 0; i < maxLength__Array; i++) {
          let letterBig   = arrayLetters[i];
          let letterSmall = arrayLetters[i];

          /* –ú–∞—Å—Å–∏–≤ –∞–ª—Ñ–∞–≤–∏—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç, –Ω–∞ –¥–∞–Ω–Ω–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏, –±—É–∫–≤—É? */
          if (letterBig == undefined && letterSmall == undefined) {
                letterBig   = '<div class="empty__letter"></div>';
                letterSmall = '<div class="empty__letter"></div>';
          } else {
                letterSmall = /* '( '+  */letterSmall/*  + ' )' */;
          }

          let cell__td            = document.createElement('tr');
              cell__td.className  = 'letters';
              cell__td.innerHTML  = '<td><div class="big">' + letterBig    + '</div>' +
                                      '<div class="small">'   + letterSmall  + '</div></td>';
          document.getElementById(idCol).append(cell__td);
        }
      }
    } else {
      /* ERROR 3*/ const massage = `
          <center>Error (‚Ññ3)</center><br/>
          –í —Ñ—É–Ω–∫—Ü–∏—é createCol() –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–∞–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: <br/><br/><ul><li>
          ( \'String\', \'String\', null ) - —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫;</li></ul><br/>
          OR<br/><br/><ul><li>
          ( \'String\', \'String\', ObjectAlphabet.&lt;nameArray&gt; ) - —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ —Å –∞–ª—Ñ–∞–≤–∏—Ç–æ–º.</li></ul>
      `;
      return errorMessageOutput(massage);
    }
  }



  //*: errorMessageOutput :*/
  function errorMessageOutput(textError = '') {
    let arrAlertClassElements = document.getElementsByClassName('error-alert');

      /* –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ 1 –æ—à–∏–±–∫—É */
      if (arrAlertClassElements[0] == undefined) {
        let errorMessage;
            errorMessage           = document.createElement('div');
            errorMessage.className = 'error-alert';
            errorMessage.innerHTML = textError; // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        document.getElementById('table__error--wrap').append(errorMessage);
      }
  }

});