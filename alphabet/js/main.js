'use strict';

//___ Object ___
/* –û–±—ä–µ–∫—Ç —Å –º–∞—Åc–∏–≤–∞–º–∏ –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤ */
const ObjectAlphabet = {
  enBigArr: [
    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'
  ],
  enSmallArr: [
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'
  ],
  ruBigArr: [
    '–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Å', '–ñ', '–ó', '–ò', '–ô', '–ö', '–õ', '–ú', '–ù', '–û', '–ü', '–†', '–°', '–¢', '–£', '–§', '–•', '–¶', '–ß', '–®', '–©', '–™', '–´', '–¨', '–≠', '–Æ', '–Ø'
  ],
  ruSmallArr: [
    '–∞', '–±', '–≤', '–≥', '–¥', '–µ', '—ë', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ', '—Ö', '—Ü', '—á', '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è'
  ],
  ruToEnBigArr: [
    'A', 'B', 'V', 'G', 'D', 'E', 'Yo(E)', 'Zh', 'Z', 'I', 'Y(i)', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F', 'Kh', 'Ts', 'Ch', 'Sh', 'Shch', '\'\'', 'Y', '\'', 'E', 'Yu(iu)', 'Ya(ia)'
  ],
  ruToEnSmallArr: []
};

//___ Variables global ___
let maxLength__Array = 0; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω–Ω—ã –º–∞—Å—Å–∏–≤–∞
let idTable = 'table';    // id –¥–ª—è create <table>

/* –°–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –±—É–∫–≤ */
for (let key in ObjectAlphabet) { // –í key –≤–µ—Å—å –º–∞—Åc–∏–≤ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—å–µ–∫—Ç–∞
  if ( maxLength__Array < ObjectAlphabet[key].length ) {
    maxLength__Array = ObjectAlphabet[key].length;
  }
}

/* –î–ª–∏–Ω–Ω–∞ –º–∞—Åc–∏–≤–æ–≤ */
const length__enBigArr   = ObjectAlphabet.enBigArr.length;   // (26)
const length__enSmallArr = ObjectAlphabet.enSmallArr.length; // (26)
const length__ruBigArr   = ObjectAlphabet.ruBigArr.length;   // (33)
const length__ruSmallArr = ObjectAlphabet.ruSmallArr.length; // (33)
//* ____________________________________________________________________



//___ Main function ___
window.onload = function Main() {
  /* Create <table></table> */
  if ( document.getElementById('inner__table') !== null ) {
    document.getElementById('inner__table').innerHTML = `<table class="${idTable}" id="${idTable}"></table>`;
  } else
    /* ERROR 1 */ return errorMessageOutput('<center>Error (‚Ññ1)</center> <br/>–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ index.html -- div c id="inner__table"');

  /* –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω–Ω—ã –º–∞—Åc–∏–≤–∞ –±–æ–ª—å—à–∏—Ö –±—É–∫–≤ —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ */
  if ( length__ruBigArr == length__ruSmallArr &&
       length__enBigArr == length__enSmallArr
  ) {
    /* Create Cols */
    createCol('colNumber', '‚Ññ', null, null);
    createCol('colEn', 'En', ObjectAlphabet.enBigArr, ObjectAlphabet.enSmallArr);
    createCol('colRu', 'Ru', ObjectAlphabet.ruBigArr, ObjectAlphabet.ruSmallArr);
    createCol('colRuToEn', 'Ru > En', ObjectAlphabet.ruToEnBigArr, ObjectAlphabet.ruToEnSmallArr);
    /* Error test */
    // createCol('231', 'Ru > En1', ObjectAlphabet.ruToEnBigArr, null); // Error 3
    // createCol('231', 'Ru > En1', null, ObjectAlphabet.ruToEnBigArr); // Error 3
    // createCol(9, 6, ObjectAlphabet.ruToEnBigArr, ObjectAlphabet.ruToEnBigArr); // Error 4
  } else {
    /* ERROR 2 */
    const massage = `
      <center>Error (‚Ññ2)</center>
      <br/><strong>For create table - size arrays differ.
      <br/>Check please arrays: ("RU" !== "ru") or ("EN" !== "en").</strong>
    `;
    errorMessageOutput(massage);
  }
};
//* ____________________________________________________________________



//___Functions___üëá
/*
  üëá Parameters - createCol()
  ** idCol            - ('' - string, —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ id - –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ –Ω–æ–≤–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞)
  ** nameCol_HTML     - (text - –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ –ê–ª—Ñ–∞–≤–∏—Ç–∞)
  ** arrayLetterBig   - (–ú–∞—Å—Å–∏–≤ –±–æ–ª—å—à–∏—Ö –±—É–∫–≤ –∏–ª–∏ null, –µ—Å–ª–∏ –≤–º–µ—Å—Ç–æ 2-—Ö –º–∞—Å—Å–∏–≤–æ–≤ –∑–∞–¥–∞—Ç—å null, —Ç–æ —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫)
  ** arrayLetterSmall - (–ú–∞—Å—Å–∏–≤ –º–∞–ª–µ–Ω—å–∫–∏—Ö –±—É–∫–≤ –∏–ª–∏ null, –µ—Å–ª–∏ –≤–º–µ—Å—Ç–æ 2-—Ö –º–∞—Å—Å–∏–≤–æ–≤ –∑–∞–¥–∞—Ç—å null, —Ç–æ —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫)
*/
function createCol( idCol='', nameCol_HTML='', arrayLetterBig=[], arrayLetterSmall=[] )
{
  if ( arrayLetterBig == null && arrayLetterSmall !== null ||
       arrayLetterBig !== null && arrayLetterSmall == null
  ) {
    /* ERROR 3 */
    const massage = `
      <center>Error (‚Ññ3)</center>
      <br/> –í —Ñ—É–Ω–∫—Ü–∏—é createCol()
      <br/> ---- –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–∞–∫–∏–µ –ø–∞—Ä–º–µ—Ç—Ä—ã:
      <br/>( \'String\', \'String\', null, null ) -- —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫
      <br/> ---- –∏–ª–∏ —Ç–∞–∫–∏–µ:
      <br/>( \'String\', \'String\', [ 'A', 'B'... ], [ 'a', 'b'... ] ) -- —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ —Å –∞–ª—Ñ–∞–≤–∏—Ç–æ–º
    `;
    return errorMessageOutput(massage);
  }

  if ( idCol.constructor === String && nameCol_HTML.constructor === String &&
       arrayLetterBig === null && arrayLetterSmall === null ||
       idCol.constructor === String && nameCol_HTML.constructor === String &&
       arrayLetterBig.constructor === Array && arrayLetterSmall.constructor === Array
  ) {
    let col;                 // –°—Ç–æ–ª–±–µ—Ü
    let nameCol;             // –ò–º—è —Å—Ç–æ–ª–±—Ü–∞
    let cell;                // –Ø—á–µ–π–∫–∞
    let letterBig;           // –ë–æ–ª—å—à–∞—è –±—É–∫–≤–∞ —Å –º–∞c—Å–∏–≤–∞
    let letterSmall;         // –ú–∞–ª–µ–Ω—å–∫–∞—è –±—É–∫–≤–∞ —Å –º–∞—Åc–∏–≤–∞

    //// create column
    col = document.createElement('div');
    col.className = 'col';
    col.id = idCol;
    document.getElementById(idTable).append(col);

    //// create name column
    nameCol = document.createElement('tr');
    nameCol.className = 'nameCol';
    nameCol.innerHTML = '<th class="name" colspan=2>' + nameCol_HTML + '</th>';
    document.getElementById(idCol).append(nameCol);

    if ( arrayLetterBig === null && arrayLetterSmall === null ) {
      //// create cell number
      for (let i = 0; i < maxLength__Array; i++) {
        cell = document.createElement('tr');
        cell.className = 'number';
        cell.innerHTML = '<td>' + (i + 1) + '</td>'; // –ù–∞—á–∞–ª–æ —Å 1
        document.getElementById(idCol).append(cell);
      }
    } else {
      //// create cell letters
      for (let i = 0; i < maxLength__Array; i++) {
        letterBig = arrayLetterBig[i];
        letterSmall = arrayLetterSmall[i];

        if ( letterBig == undefined && letterSmall == undefined ) {
          letterBig = '<div class="empty__letter"></div>';
          letterSmall = '<div class="empty__letter"></div>';
        } else if ( letterBig == undefined || letterSmall == undefined ) {
          if ( letterBig == undefined) {
            letterBig = '<div class="empty__letter"></div>';
          } else letterSmall = '<div class="empty__letter"></div>';
        } else {
          letterSmall = '( '+ letterSmall + ' )';
        }

        cell = document.createElement('tr');
        cell.className = 'letters';
        cell.innerHTML = '<td><div class="big">' + letterBig + '</div>' +
                         '<div class="small">'   + letterSmall + '</div></td>';
        document.getElementById(idCol).append(cell);
      }
    }
  } else {
    /* ERROR 4*/
    const massage = `
      <center>Error (‚Ññ4)</center>
      <br/> –í —Ñ—É–Ω–∫—Ü–∏—é createCol()
      <br/> ---- –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–∞–∫–∏–µ –ø–∞—Ä–º–µ—Ç—Ä—ã:
      <br/>( \'String\', \'String\', null, null ) -- —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫
      <br/> ---- –∏–ª–∏ —Ç–∞–∫–∏–µ:
      <br/>( \'String\', \'String\', [ 'A', 'B'... ], [ 'a', 'b'... ] ) -- —Å–æ–∑–¥–∞—Å—Ç—Å—è —Å—Ç–æ–ª–±–∏–∫ —Å –∞–ª—Ñ–∞–≤–∏—Ç–æ–º
    `;
    errorMessageOutput(massage);
  }
}

/* Error Message function */
function errorMessageOutput(textError='') {
  let arrAlertClassElements = document.getElementsByClassName('alert');

    if (arrAlertClassElements[0] == undefined) {
      let errorMessage; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–∞–±–ª–∏—Ü—ã

      errorMessage = document.createElement('div');
      errorMessage.className = 'alert';
      errorMessage.innerHTML = textError;

      document.getElementById('alert__block').append(errorMessage);
    }
}
//* ____________________________________________________________________